{
  "version": 3,
  "sources": ["../../../../src/functions/generateCertificate.ts", "../../../../src/utils/dynamodbClient.ts"],
  "sourcesContent": ["import { document } from 'src/utils/dynamodbClient'\n\ninterface ICreateCertificate {\n  id: string\n  name: string\n  grade: string\n}\n\nexport const handle = async event => {\n  const { grade, id, name } = event.body as ICreateCertificate\n\n  await document.put({\n    TableName: 'users_certificates',\n    Item: {\n      id,\n      name,\n      grade,\n    }\n  }).promise()\n\n  return {\n    statusCode: 201,\n    body: JSON.stringify({\n      message: 'Certificate created',\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  }\n}\n", "import { DynamoDB } from 'aws-sdk'\n\nconst options = {\n  region: 'localhost',\n  endpoint: 'http://localhost:8000',\n  accessKeyId: 'xxxxxx', // essa\n  secretAccessKey: 'xxxxxx', // e essa\n}\n\nconst isOffline = () => {\n  return process.env.IS_OFFLINE\n}\n\nexport const document = isOffline()\n  ? new DynamoDB.DocumentClient(options)\n  : new DynamoDB.DocumentClient()\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACd,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAa;AAAA,EACb,iBAAiB;AAAA;AAGnB,IAAM,YAAY,MAAM;AACtB,SAAO,QAAQ,IAAI;AAAA;AAGd,IAAM,WAAW,cACpB,IAAI,wBAAS,eAAe,WAC5B,IAAI,wBAAS;;;ADPV,IAAM,SAAS,OAAM,UAAS;AACnC,QAAM,EAAE,OAAO,IAAI,SAAS,MAAM;AAElC,QAAM,SAAS,IAAI;AAAA,IACjB,WAAW;AAAA,IACX,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA;AAAA,KAED;AAEH,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU;AAAA,MACnB,SAAS;AAAA;AAAA,IAEX,SAAS;AAAA,MACP,gBAAgB;AAAA;AAAA;AAAA;",
  "names": []
}
